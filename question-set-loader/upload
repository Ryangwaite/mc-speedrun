#!/usr/bin/env python3

"""
Queries the 'sign-on' service to get a JWT token then uploads
the provided file to the question-set-loader
Assumes that sign-on is running on port 80 of the localhost. Its
best spun up as part of the deployment/docker-compose.yml environment.
"""

import os
import requests
import argparse
import sys


def main(args=None):
    parser = argparse.ArgumentParser(description="""
Queries the 'sign-on' service to get a JWT token then uploads the file
to question-set-loader.
""")
    parser.add_argument("-f", "--file", required=True, help="Quiz file to upload")
    parser.add_argument("address", help="The question-set-loader hostname and port to connect to e.g. localhost:8082")
    parsed_args = parser.parse_args(args)

    file_path = parsed_args.file

    if not os.path.exists(file_path) or not os.path.isfile(file_path):
        sys.exit(f"File '{file_path}' doesn't exist or is a directory")

    response = requests.post(f"http://localhost/sign-on/host")
    if response.status_code != 200:
        sys.exit(f"Failed to get JWT token from sign-on service. Error: {response.text}")

    response_json = response.json()
    jwt_token = response_json["access_token"]
    
    # Upload file
    q_set_loader_url = f"http://{parsed_args.address}/upload/quiz"
    print(f"Uploading '{file_path}' to '{q_set_loader_url}' with token '{jwt_token}'...")
    response = requests.post(q_set_loader_url, headers={"Authorization": f"Bearer {jwt_token}"}, files={"file": open(file_path, "rb")})
    print("Done")


if __name__ == '__main__':
    main(sys.argv[1:])
